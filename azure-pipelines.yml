
variables:
- template: pipeline_templates/vars-global.yml

pool: ${{ variables.vmImageName }}

stages: 
- stage: 'build'
  displayName: 'Build'
  jobs: 
  - job: 'build'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    - script: |
        npm run build
      displayName: 'npm build'

    - script: |
        npm test
      displayName: 'npm test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip  

- stage: deploy_test
  variables: 
    - template: pipeline_templates/vars-test.yml
  jobs:
    - deployment: deploymentJob
      environment: ${{ variables.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
              - template: pipeline_templates/deploy-app.yml
                parameters:
                  environment: test
                  webAppName: ${{ variables.webAppName }}
                  appType: ${{ variables.appType }}
                  serviceConnection: ${{ variables.serviceConnection }}

- stage: deploy_dev
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/dev')
  dependsOn: deploy_test
  variables: 
    - template: pipeline_templates/vars-dev.yml
  jobs:
    - deployment: deploymentJob
      environment: ${{ variables.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
              - template: pipeline_templates/deploy-app.yml
                parameters:
                  environment: dev
                  webAppName: ${{ variables.webAppName }}
                  appType: ${{ variables.appType }}
                  serviceConnection: ${{ variables.serviceConnection }}

- stage: deploy_prd
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn: deploy_test
  variables: 
    - template: pipeline_templates/vars-prd.yml
  jobs:
    - deployment: deploymentJob
      environment: ${{ variables.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
              - template: pipeline_templates/deploy-app.yml
                parameters:
                  environment: prd
                  webAppName: ${{ variables.webAppName }}
                  appType: ${{ variables.appType }}
                  serviceConnection: ${{ variables.serviceConnection }}